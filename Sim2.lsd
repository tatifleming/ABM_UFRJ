	
Label Root
{
	Son: Sector
	Label Sector
	{
		Son: FIRM
		Label FIRM
		{
			Var: Avg_Price
			Var: Cost
			Var: Desired
			Var: Price
			Param: avg
			Param: markup
			Param: monopoly_degree
			Param: sd
			Var: Max_Price

		}


	}


}


DATA

Object: Root C	1

Object: Sector C	1

Object: FIRM C	5
Var: Avg_Price 0 s + n p
Var: Cost 0 n + n n
Var: Desired 0 n + n n
Var: Price 1 n + n n	6.76201568967741	8.85455452261898	8.32820458446924	7.58395889965904	7.38157725412666
Param: avg 0 n + n n	5	5	5	5	5
Param: markup 0 n + n n	0.5	0.5	0.5	0.5	0.5
Param: monopoly_degree 0 n + n n	0.5	0.5	0.5	0.5	0.5
Param: sd 0 n + n n	1	1	1	1	1
Var: Max_Price 0 s + n p

SIM_NUM 1
SEED 2
MAX_STEP 100
EQUATION fun_exercise_2.cpp
MODELREPORT report_Sim1.html

DESCRIPTION

Object_Root

END_DESCRIPTION

Object_Sector

END_DESCRIPTION

Object_FIRM

END_DESCRIPTION

Variable_Avg_Price

END_DESCRIPTION

Variable_Cost

END_DESCRIPTION

Variable_Desired

END_DESCRIPTION

Variable_Price

_INIT_
All 5 instances equal to 1
END_DESCRIPTION

Parameter_avg

_INIT_
All 5 instances equal to 5
END_DESCRIPTION

Parameter_markup

_INIT_
All 5 instances equal to 0.5
END_DESCRIPTION

Parameter_monopoly_degree

_INIT_
All 5 instances equal to 0.5
END_DESCRIPTION

Parameter_sd

_INIT_
All 5 instances equal to 1
END_DESCRIPTION

Variable_Max_Price

END_DESCRIPTION


DOCUOBSERVE

END_DOCUOBSERVE


DOCUINITIAL

END_DOCUINITIAL


EQ_FILE
//#define EIGENLIB			// uncomment to use Eigen linear algebra library

#include "fun_head_fast.h"

// do not add Equations in this area

MODELBEGIN

// insert your equations here, ONLY between the MODELBEGIN and MODELEND words

//PART 1
EQUATION("Price")
v[0] = V("monopoly_degree");  // parameter: monopoly degree
v[1] = V("Cost");
v[2] = V("Desired");
v[3] = AVEL("Price", 1);
v[4] = v[0]*v[2]+(1 - v[0])*v[3];
RESULT(v[4])

EQUATION("Desired")
v[0]= V("Cost"); // Cost of Firm i in period t
v[1]= V("markup"); // parameter: fixed markup
v[2]= (1 + v[1])*v[0];
RESULT(v[2])

EQUATION ("Cost")
v[0]= V("avg"); //parameter
v[1] = V("sd"); //parameter
v[2] = norm(v[0],v[1]); 
RESULT(v[2])

EQUATION("Avg_Price")
v[0]=0;
v[2]=0;
CYCLE(cur, "FIRM")
{
	v[1]=VS(cur, "Price");
	v[0] = v[0] +v[1];
	v[2] = v[2] +1; 
}
RESULT(v[2])

// PART 2
// Using the CYCLE, create a variable on the Sector object that finds the value of the maximum price among the firms in each period. (Hint: you might need to use ”if else”. Check the documentation to see how to use the conditional) 

EQUATION("Max_Price")
v[0]=0;
CYCLE(cur, "FIRM")
{
  v[1] = MAXS( cur, "Price" );
  v[0] = v[0] + v[1];
}
RESULT(v[0])


MODELEND

// do not add Equations in this area

void close_sim( void )
{
	// close simulation special commands go here
}

END_EQ_FILE
